# Default values for gpe-media-service Helm chart.

# Application image settings
image:
  repository: 274267893613.dkr.ecr.eu-central-1.amazonaws.com/gpe/services/media
  tag: "latest"
  pullPolicy: IfNotPresent

# Image pull secrets for private registries (ECR)
imagePullSecrets:
  - name: ecr-secret

# Number of pod replicas
replicaCount: 1

# Kubernetes service settings
service:
  type: NodePort
  # NodePort for direct host access when ingress is enabled
  nodePort: 30086
  port: 3000

# AWS S3 configuration
awsS3Bucket: "gpe-media-dev"

# GROQ API configuration
groqApiKey: ""
groqModel: "gemma2-9b-it"  # Add Groq model configuration

# Moderation features configuration
moderation:
  features:
    visual:
      awsRekognitionEnabled: true
    text:
      groqLLMEnabled: false
      keywordFilterEnabled: false
  aws:
    rekognition:
      region: "eu-central-1"
      minConfidence: 60

# Resource requests and limits
resources: {}
#  requests:
#    cpu: 100m
#    memory: 128Mi
#  limits:
#    cpu: 500m
#    memory: 512Mi

# Non-sensitive environment variables (ConfigMap)
port: 3000
logLevel: "info"
maxFileSize: "5mb"
allowedImageTypes: "image/jpeg,image/png,image/gif"

mongodbUri: "mongodb://host.docker.internal:27017/media-service?directConnection=true"
# Ingress configurationkafkaBrokers
ingress:
  enabled: true
  className: "nginx"
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/rewrite-target: "/$1"
    nginx.ingress.kubernetes.io/use-regex: "true"
  hosts:
    - host: "192.168.49.2"
      paths:
        - path: /media-service/(.*)
          pathType: ImplementationSpecific
  tls: [] 
kafkaBrokers: "host.docker.internal:19092"
kafkaClientId: "post-service"

mux:
  tokenId: ""           # MUX_TOKEN_ID
  tokenSecret: ""       # MUX_TOKEN_SECRET
  webhookSecret: ""     # MUX_WEBHOOK_SECRET
  publicBaseUrl: "https://gpe.dev"